name: Update Workflow Options
on:
  push:
    paths:
      - "*/Dockerfile"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  update-options:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_UPDATE_TOKEN }}
          fetch-depth: 0

      - name: Discover services and update workflow
        run: |
          python3 << 'EOF'
          import os
          import yaml
          import subprocess
          from datetime import datetime

          workflow_file = ".github/workflows/release-dev-deploy.yml"

          print("🔍 Discovering all services...")

          services = []
          for item in sorted(os.listdir('.')):
              if os.path.isdir(item) and not item.startswith('.') and not item.startswith('_'):
                  if os.path.exists(f'{item}/Dockerfile'):
                      services.append(item)
                      print(f"Found: {item}")

          print(f"Services found: {', '.join(services)}")

          with open(workflow_file, 'r') as f:
              workflow = yaml.safe_load(f)

          new_options = ['default']
          for service in services:
              new_options.append(service)
              new_options.append(f"{service}-dev")

          old_options = workflow['on']['workflow_dispatch']['inputs']['service']['options']
          workflow['on']['workflow_dispatch']['inputs']['service']['options'] = new_options

          if old_options == new_options:
              print("✅ No changes needed - workflow is up to date!")
          else:
              print("📝 Changes detected! Updating workflow...")
              
              with open(workflow_file, 'w') as f:
                  yaml.dump(workflow, f, default_flow_style=False, sort_keys=False, width=120)
              
              subprocess.run(['git', 'config', 'user.name', 'github-actions[bot]'])
              subprocess.run(['git', 'config', 'user.email', 'github-actions[bot]@users.noreply.github.com'])
              subprocess.run(['git', 'add', workflow_file])
              subprocess.run(['git', 'commit', '-m', f'🤖 Auto-update workflow options - found services: {", ".join(services)}'])
              
              branch = f"auto-update-workflow-{int(datetime.now().timestamp())}"
              subprocess.run(['git', 'checkout', '-b', branch])
              subprocess.run(['git', 'push', 'origin', branch])
              
              pr_body = f"""Found services: {', '.join(services)}
              
              This PR was automatically generated to update the workflow options.
              
              - Updated service options in release-dev-deploy.yml
              - Services configured: {', '.join(services)}
              
              Please review and merge."""
              
              result = subprocess.run([
                  'gh', 'pr', 'create',
                  '--title', '🤖 Auto-update workflow options',
                  '--body', pr_body,
                  '--base', 'main',
                  '--head', branch
              ], capture_output=True, text=True)
              
              if result.returncode != 0:
                  print("PR creation failed - push was successful though")
                  print(result.stderr)
          EOF
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_UPDATE_TOKEN }}

      - name: Summary
        run: |
          echo "## 🔄 Workflow Update Check" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "### Discovered Services:" >> $GITHUB_STEP_SUMMARY
          for dir in */; do
            dir=${dir%/}
            if [[ "$dir" != .* ]] && [[ "$dir" != _* ]] && [[ -f "$dir/Dockerfile" ]]; then
              echo "- ✅ $dir" >> $GITHUB_STEP_SUMMARY
            fi
          done

          echo "" >> $GITHUB_STEP_SUMMARY

          if git diff --quiet .github/workflows/release-dev-deploy.yml; then
            echo "**Status:** ✅ Workflow is up to date" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Status:** 📝 Workflow updated with new services" >> $GITHUB_STEP_SUMMARY
          fi
